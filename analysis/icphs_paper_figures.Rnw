\documentclass{article}

\usepackage{geometry}
\geometry{letterpaper,margin=1in}
\usepackage[english]{babel}
\usepackage{fontspec}
\defaultfontfeatures{Mapping=tex-text}
\setmainfont[Ligatures=TeX]{Times New Roman}


<<setup, include=FALSE, cache=FALSE>>=
library(ggplot2)
library(xtable)
source("../src/core.R")
source("../src/read.R")
source("../src/plotting.R")
@

<<get-external-vars, include=FALSE, cache=FALSE>>=
source("icphs_paper_analysis_setup.R")
@

<<read-input, include=FALSE, cache=FALSE>>=
cs <- list()
for (name in names(c_fns)) {
  cs[[name]] <- read_features(c_fns[[name]], c_label_maps[[name]],
                              c_trans_fns[[name]], c_normalize[[name]], "c")
}

ts <- list()
for (name in names(t_fns)) {
  ts[[name]] <- read_features(t_fns[[name]], t_label_maps[[name]],
                              t_trans_fns[[name]], t_normalize[[name]], "t")
}
@

<<construct-phone-pairs,cache=FALSE,include=FALSE>>=
auc_c_rep_name_col <- c()
auc_t_rep_name_col <- c()
auc_auc_col <- c()
scores_all <- c()
pairs_list <- list()
freps_list <- list()
for (c_name in names(c_fns)) {
  c_phones <- cs[[c_name]]
  c_sim <- c_sim_fns[[c_name]]
  c_fnames <- feature_names(c_phones)
  class_features <- c_class_features[[c_name]]
  eps_other <- c_eps_others[[c_name]]
  same_thresh <- c_same_threshs[[c_name]]
  for (t_name in names(t_fns)) {
    t_phones <- ts[[t_name]]
    t_sim <- t_sim_fns[[t_name]]
    t_fnames <- feature_names(t_phones)
    ct_phones <- merge_phones(c_phones, t_phones)
    ct_phone_pairs <- construct_phone_pairs(ct_phones, c_fnames, t_fnames,
                                            c_sim, t_sim)
    ct_freps <- construct_freps(ct_phone_pairs, c_fnames, eps_other)
    ct_frep_pairs <- construct_frep_pairs(ct_freps, c_fnames, t_fnames, c_sim,
                                          t_sim)
    relevant_pairs <- relevant_frep_pairs(ct_frep_pairs, class_features)
    same_diff <- frep_pairs_same_diff(relevant_pairs, class_features,
                                      same_thresh)
    scores <- pred_stats(relevant_pairs$t_sim, same_diff)
    auc_val <- auc(scores$tpr, scores$fpr)
    #
    scores$c_name <- c_name
    scores$t_name <- t_name
    scores_all <- rbind(scores_all, scores)
    #
    auc_c_rep_name_col <- c(auc_c_rep_name_col, c_name)
    auc_t_rep_name_col <- c(auc_t_rep_name_col, t_name)
    auc_auc_col <- c(auc_auc_col, auc_val)
    #
    ct_pairs <- unique(c(
      as.character(relevant_pairs[same_diff=="2_Same",]$phone_pair_1),
      as.character(relevant_pairs[same_diff=="2_Same",]$phone_pair_2)))
    ct_pairs <- gsub("_", "--", ct_pairs)
    if (is.null(pairs_list[[c_name]])) {
      pairs_list[[c_name]] <- ct_pairs
    } else {
      if (!identical(pairs_list[[c_name]], ct_pairs)) {
        stop()
      }
    }
    ct_freplist <- sort(
      as.character(relevant_pairs[same_diff=="2_Same",]$phone_pair_pair))    
    if (is.null(freps_list[[c_name]])) {
      freps_list[[c_name]] <- ct_freplist
    } else {
      if (!identical(freps_list[[c_name]], ct_freplist)) {
        stop()
      }
    }
  }
}
auc_table <- data.frame(c_rep_name=auc_c_rep_name_col,
                        t_rep_name=auc_t_rep_name_col,
                        auc=auc_auc_col)

@




\begin{document}

\title{Figures and tables for ICPhS 2015 paper}
\maketitle

<<plot-voice,echo=FALSE,dev='pdf',warning=FALSE>>=
ggplot(scores_all[scores_all$c_name=="V_Voice",], aes(x=fpr, y=tpr)) +
  geom_abline(slope=1.0, intercept=0.0, linetype="dashed", size=2) +
  geom_line(aes(colour=t_name), size=2) + theme_bw() +
  theme(text=element_text(size=20), legend.position="bottom") +
  scale_colour_brewer(type="div", palette=7, name="Test Representation") +
  guides(colour=guide_legend(ncol=2)) + ylim(c(0,1)) + 
  xlab("False positive rate") + ylab("True positive rate")
@


<<plot-easy,echo=FALSE,dev='pdf',warning=FALSE>>=
ggplot(auc_table, aes(x=c_rep_name, y=auc, fill=t_rep_name)) +
  geom_bar(stat="identity", position="dodge") +
  geom_hline(yintercept=0.5, linetype="dashed", size=2) + theme_bw() +
  theme(text=element_text(size=20), legend.position="bottom",
        axis.text.x=element_text(angle = 90, hjust=1, vjust=0.5)) +
  geom_vline(xintercept=c(2.5, 5.5)) +
  scale_x_discrete(labels=c("Continuant", "Nasal", "Coronal-Dorsal",
                            "Coronal-Labial", "Labial-Dorsal",
                            "Voice")) +
  scale_fill_brewer(type="div", palette=7, name="Test Representation") +
  guides(fill=guide_legend(ncol=2)) + ylim(c(0,1)) + 
  xlab("Feature") + ylab("Alignment score")
@

<<table,echo=FALSE,results='asis'>>=
pairs_table <- data.frame(sapply(pairs_list, function(x)
                            paste(x, collapse=", ")))
names(pairs_table) <- "Pairs"
pairs_table$Feature <- rownames(pairs_table)
rownames(pairs_table) <- c()
pairs_table <- pairs_table[,c(2,1)]
xtable(pairs_table)
@

<<frep-table,echo=FALSE,results='asis'>>=
freps_table <- data.frame(sapply(freps_list, function(x)
                            paste(x, collapse=", ")))
names(freps_table) <- "Freps"
freps_table$Feature <- rownames(freps_table)
rownames(freps_table) <- c()
freps_table <- freps_table[,c(2,1)]
xtable(freps_table, align=c("c","c","p{4cm}"))
@

<<display-phonepairs,cache=FALSE,echo=FALSE, dev='pdf'>>=
ct_frepps_all <- c()

c_name <- "P_Coronal-Dorsal"
c_phones <- cs[[c_name]]
c_sim <- c_sim_fns[[c_name]]
c_fnames <- feature_names(c_phones)
class_features <- c_class_features[[c_name]]
eps_other <- c_eps_others[[c_name]]
same_thresh <- c_same_threshs[[c_name]]
for (t_name in c("Articulatory", "Acoustic")) {
  t_phones <- ts[[t_name]]
  t_sim <- t_sim_fns[[t_name]]
  t_fnames <- feature_names(t_phones)
  ct_frepps <- phones_to_relevant_frep_pairs(c_phones, t_phones, c_sim,
                                              t_sim, class_features, eps_other)
  ct_frepps$same_diff <- frep_pairs_same_diff(ct_frepps, class_features,
                                      same_thresh)
  if (t_name == "Acoustic") {
    t_name <- "Spectral"
  }
  ct_frepps$which_case <- paste0("Coronal-Dorsal / ", t_name)
  ct_frepps_all <- rbind(ct_frepps_all, ct_frepps)  
}

c_name <- "M_Nasal"
c_phones <- cs[[c_name]]
c_sim <- c_sim_fns[[c_name]]
c_fnames <- feature_names(c_phones)
class_features <- c_class_features[[c_name]]
eps_other <- c_eps_others[[c_name]]
same_thresh <- c_same_threshs[[c_name]]
for (t_name in c("Acoustic", "Phonotactic (NN)")) {
  t_phones <- ts[[t_name]]
  t_sim <- t_sim_fns[[t_name]]
  t_fnames <- feature_names(t_phones)
  ct_frepps <- phones_to_relevant_frep_pairs(c_phones, t_phones, c_sim,
                                              t_sim, class_features, eps_other)
  ct_frepps$same_diff <- frep_pairs_same_diff(ct_frepps, class_features,
                                      same_thresh)
  ct_frepps$which_case <- paste0("Nasal / ", t_name)
  ct_frepps_all <- rbind(ct_frepps_all, ct_frepps)  
}

ggplot(ct_frepps_all, aes(x=t_sim, fill=same_diff)) +
      facet_wrap(~ which_case, ncol=2) +
      stat_bin(alpha=0.4, position="identity", colour="black", binwidth=0.1) +
      theme_bw() + theme(text=element_text(size=20), legend.position="bottom") +
      scale_fill_brewer(type="qual", palette=7, name="Frep pair type",
                        labels=c("Between feature", "Within feature")) +
      xlab("Test space similarity") + ylab("Number of frep pairs")

@


\end{document}
